{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Avery Lindseth\\\\Desktop\\\\Code Projects\\\\Theme-Park-Database\\\\front-end\\\\src\\\\components\\\\searchBreakdowns.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/reporttable.css';\nimport BreakdownSearchBox from '../components/breakdownSearchBox.js';\nimport BreakdownEntry from '../components/breakdownEntry.js';\nimport { createAPIEndpoint, ENDPOINTS } from '../api/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BreakdownSearch() {\n  _s();\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState(blankFilters);\n  const [doSearch, setDoSearch] = useState(false);\n  const getFromSearch = filter => {\n    console.log(filter);\n    setFilters(filter);\n    setDoSearch(!doSearch);\n    setEditId(null);\n  };\n  const findbreakdowns = () => {\n    createAPIEndpoint(ENDPOINTS.breakdowns).fetch().then(response => {\n      console.log(response.data);\n      setData(filterData(response.data));\n    }).catch(error => console.log(error));\n  };\n  useEffect(() => {\n    if (filters) {\n      findbreakdowns();\n      console.log(data);\n    }\n  }, [filters, doSearch]);\n  const filterData = info => {\n    if (filters.breakdown_id != \"\") {\n      info = info.filter(item => {\n        return item.breakdown_id == filters.breakdown_id;\n      });\n    }\n    if (filters.ride_id != \"\") {\n      info = info.filter(item => {\n        return item.ride_id == filters.ride_id;\n      });\n    }\n    if (filters.ride_name != \"\") {\n      info = info.filter(item => {\n        return item.name.toLowerCase().startsWith(filters.ride_name.toLowerCase());\n      });\n    }\n    if (filters.maintainer_id != \"\") {\n      info = info.filter(item => {\n        return item.maintainer_id == filters.maintainer_id;\n      });\n    }\n    if (filters.breakdown_date != \"\") {\n      const d = new Date(filters.breakdown_date);\n      info = info.filter(item => {\n        return new Date(item.breakdown_date).toLocaleDateString() == d.toLocaleDateString();\n      });\n    }\n    if (filters.breakdown_desc != \"\") {\n      info = info.filter(item => {\n        return item.breakdown_desc.toLowerCase().includes(filters.breakdown_desc.toLowerCase());\n      });\n    }\n    if (filters.resolved != \"\") {\n      info = info.filter(item => {\n        return item.resolved == filters.resolved;\n      });\n    }\n    return info;\n  };\n  const renderTable = () => {\n    return data.map(elem => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          clasName: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.breakdown_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.ride_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.breakdown_nums\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.maintainer_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.breakdown_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.breakdown_desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: elem.resolved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              value: elem.breakdown_id,\n              onClick: resolveBreakdown,\n              children: \"Resolve as Fixed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, elem.breakdown_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionbox\",\n      children: /*#__PURE__*/_jsxDEV(BreakdownSearchBox, {\n        returnFilters: getFromSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(BreakdownSearch, \"msE/z+fLKEKFCoS7oh85vm2MfLc=\");\n_c = BreakdownSearch;\nexport default BreakdownSearch;\nvar _c;\n$RefreshReg$(_c, \"BreakdownSearch\");","map":{"version":3,"names":["React","useState","BreakdownSearchBox","BreakdownEntry","createAPIEndpoint","ENDPOINTS","BreakdownSearch","data","setData","filters","setFilters","blankFilters","doSearch","setDoSearch","getFromSearch","filter","console","log","setEditId","findbreakdowns","breakdowns","fetch","then","response","filterData","catch","error","useEffect","info","breakdown_id","item","ride_id","ride_name","name","toLowerCase","startsWith","maintainer_id","breakdown_date","d","Date","toLocaleDateString","breakdown_desc","includes","resolved","renderTable","map","elem","breakdown_nums","resolveBreakdown"],"sources":["C:/Users/Avery Lindseth/Desktop/Code Projects/Theme-Park-Database/front-end/src/components/searchBreakdowns.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../css/reporttable.css';\r\nimport BreakdownSearchBox from '../components/breakdownSearchBox.js';\r\nimport BreakdownEntry from '../components/breakdownEntry.js';\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api/index.js';\r\n\r\nfunction BreakdownSearch() {\r\n    const [data, setData]= useState([]);\r\n    const [filters, setFilters] = useState(blankFilters);\r\n    const [doSearch,setDoSearch] = useState(false);\r\n\r\n    const getFromSearch = (filter) => {\r\n        console.log(filter);\r\n        setFilters(filter);\r\n        setDoSearch(!doSearch);\r\n        setEditId(null);\r\n    }\r\n\r\n    const findbreakdowns = () => {\r\n        createAPIEndpoint(ENDPOINTS.breakdowns)\r\n        .fetch()\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setData(filterData(response.data));\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filters) {\r\n            findbreakdowns();\r\n            console.log(data);\r\n        }\r\n    },[filters,doSearch]);\r\n\r\n    const filterData = (info) => {\r\n        if (filters.breakdown_id != \"\") { \r\n            info = info.filter((item) => {\r\n                return (item.breakdown_id == filters.breakdown_id);\r\n            });\r\n        }\r\n        if (filters.ride_id != \"\") { \r\n            info = info.filter((item) => {\r\n                return (item.ride_id == filters.ride_id);\r\n            });\r\n        }\r\n        if (filters.ride_name != \"\") {\r\n            info = info.filter((item) => {\r\n                return (item.name.toLowerCase().startsWith(filters.ride_name.toLowerCase()))\r\n            });\r\n        }\r\n        if (filters.maintainer_id != \"\") { \r\n            info = info.filter((item) => {\r\n                return (item.maintainer_id == filters.maintainer_id);\r\n            });\r\n        }\r\n        if (filters.breakdown_date != \"\") {\r\n            const d = new Date(filters.breakdown_date);\r\n            info = info.filter((item) => {\r\n                return (new Date(item.breakdown_date).toLocaleDateString() == d.toLocaleDateString());\r\n            })\r\n        }\r\n        if (filters.breakdown_desc != \"\") {\r\n            info = info.filter((item) => {\r\n                return (item.breakdown_desc.toLowerCase().includes(filters.breakdown_desc.toLowerCase()));\r\n            });\r\n        }\r\n        if (filters.resolved != \"\") {\r\n            info = info.filter((item) => {\r\n                return (item.resolved == filters.resolved);\r\n            })\r\n        }\r\n        return info;\r\n    }\r\n\r\n    const renderTable = () => {\r\n        return data.map(elem => {\r\n            return (\r\n                <>\r\n                    <tr key={elem.breakdown_id} clasName=\"result-row\">\r\n                        <td>{elem.breakdown_id}</td>\r\n                        <td>{elem.ride_id}</td>\r\n                        <td>{elem.name}</td>\r\n                        <td>{elem.breakdown_nums}</td>\r\n                        <td>{elem.maintainer_id}</td>\r\n                        <td>{elem.breakdown_date}</td>\r\n                        <td>{elem.breakdown_desc}</td>\r\n                        <td>{elem.resolved}</td>\r\n                        <td><button type=\"button\" value={elem.breakdown_id} onClick={resolveBreakdown}>Resolve as Fixed</button></td>\r\n                    </tr>\r\n                </>\r\n            );}\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='searchpage'>\r\n            <div className=\"optionbox\">\r\n                {<BreakdownSearchBox returnFilters={getFromSearch}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BreakdownSearch;"],"mappings":"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"},"metadata":{},"sourceType":"module"}