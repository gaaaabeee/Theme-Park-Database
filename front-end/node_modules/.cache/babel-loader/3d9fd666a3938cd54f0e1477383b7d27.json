{"ast":null,"code":"import axios from 'axios';\n\n//connects front end to back end, change if needed\n\nexport const BASE_URL = 'https://cosc3380-park.azurewebsites.net/';\nexport const ENDPOINTS = {\n  customer: 'customer',\n  //'/{id}' returns list of customers or specified customer\n  customerLogin: 'Customer/signin',\n  //signs in a customer\n  customerSignup: 'Customer/signup',\n  //creates new customer account\n  customerTickets: 'Customer/tickets/',\n  //'{id}' not in backend yet, returns ticket_bought of that customer\n  employee: 'Employee',\n  //'/{id}' returns list of employees or specified employee\n  employeeLogin: 'Employee/signin',\n  //signs in an employee\n  employeeUpdate: 'Employee/update',\n  //updates an employee\n  jobSearch: 'Employee/role/',\n  //'{title}' returns employees by job title\n  employeePosition: 'Employee/position',\n  attraction: 'Attraction',\n  //returns list of attractions\n  rides: 'attraction/rides',\n  //returns list of rides\n  shops: 'attraction/shops',\n  //returns list of shops\n  ridesPastMonth: 'attraction/ridereportpastmonth',\n  shopsPastMonth: 'attraction/shopreportpastmonth',\n  attractionUpdate: 'Attraction/update',\n  // not in backend yet, updates an attraction\n  breakdowns: 'RideBreakdown',\n  // not in backend yet, returns list of breakdowns\n  breakdownUpdate: 'RideBreakdown/update',\n  //not in backend yet, resolves a breakdown\n  tickets: 'Tickets',\n  // not in backend yet, adds new ticket\n  overallReport: 'Stats',\n  // not in backend yet, returns overall park report\n  monthReport: 'Entry/',\n  //'{month}/{year}' returns month report\n  dayReport: 'Date' //'/{date}' not in backend yet, returns list of dates or specified date\n};\n\nexport const createAPIEndpoint = endpoint => {\n  let url = BASE_URL + 'api/' + endpoint + '/';\n  return {\n    fetch: () => axios.get(url),\n    fetchById: id => axios.get(url + id),\n    post: newRecord => axios.post(url, newRecord),\n    put: (id, updatedRecord) => axios.put(url + id, updatedRecord),\n    delete: id => axios.delete(url + id)\n  };\n};","map":{"version":3,"names":["axios","BASE_URL","ENDPOINTS","customer","customerLogin","customerSignup","customerTickets","employee","employeeLogin","employeeUpdate","jobSearch","employeePosition","attraction","rides","shops","ridesPastMonth","shopsPastMonth","attractionUpdate","breakdowns","breakdownUpdate","tickets","overallReport","monthReport","dayReport","createAPIEndpoint","endpoint","url","fetch","get","fetchById","id","post","newRecord","put","updatedRecord","delete"],"sources":["C:/Users/Avery Lindseth/Desktop/Code Projects/Theme-Park-Database/front-end/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n//connects front end to back end, change if needed\r\n\r\nexport const BASE_URL = 'https://cosc3380-park.azurewebsites.net/';\r\n\r\nexport const ENDPOINTS = {\r\n    customer: 'customer', //'/{id}' returns list of customers or specified customer\r\n    customerLogin: 'Customer/signin', //signs in a customer\r\n    customerSignup: 'Customer/signup', //creates new customer account\r\n    customerTickets: 'Customer/tickets/', //'{id}' not in backend yet, returns ticket_bought of that customer\r\n    employee: 'Employee', //'/{id}' returns list of employees or specified employee\r\n    employeeLogin: 'Employee/signin', //signs in an employee\r\n    employeeUpdate: 'Employee/update', //updates an employee\r\n    jobSearch: 'Employee/role/', //'{title}' returns employees by job title\r\n    employeePosition: 'Employee/position',\r\n    attraction: 'Attraction', //returns list of attractions\r\n    rides: 'attraction/rides', //returns list of rides\r\n    shops: 'attraction/shops', //returns list of shops\r\n    ridesPastMonth: 'attraction/ridereportpastmonth',\r\n    shopsPastMonth: 'attraction/shopreportpastmonth',\r\n    attractionUpdate: 'Attraction/update', // not in backend yet, updates an attraction\r\n    breakdowns: 'RideBreakdown', // not in backend yet, returns list of breakdowns\r\n    breakdownUpdate: 'RideBreakdown/update', //not in backend yet, resolves a breakdown\r\n    tickets: 'Tickets', // not in backend yet, adds new ticket\r\n    overallReport: 'Stats', // not in backend yet, returns overall park report\r\n    monthReport: 'Entry/', //'{month}/{year}' returns month report\r\n    dayReport: 'Date', //'/{date}' not in backend yet, returns list of dates or specified date\r\n};\r\n\r\nexport const createAPIEndpoint = (endpoint) => {\r\n    let url = BASE_URL + 'api/' + endpoint + '/';\r\n    return {\r\n        fetch: () => axios.get(url),\r\n        fetchById: id => axios.get(url + id),\r\n        post: newRecord => axios.post(url,newRecord),\r\n        put: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n        delete: id => axios.delete(url + id)\r\n    };\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,0CAA0C;AAElE,OAAO,MAAMC,SAAS,GAAG;EACrBC,QAAQ,EAAE,UAAU;EAAE;EACtBC,aAAa,EAAE,iBAAiB;EAAE;EAClCC,cAAc,EAAE,iBAAiB;EAAE;EACnCC,eAAe,EAAE,mBAAmB;EAAE;EACtCC,QAAQ,EAAE,UAAU;EAAE;EACtBC,aAAa,EAAE,iBAAiB;EAAE;EAClCC,cAAc,EAAE,iBAAiB;EAAE;EACnCC,SAAS,EAAE,gBAAgB;EAAE;EAC7BC,gBAAgB,EAAE,mBAAmB;EACrCC,UAAU,EAAE,YAAY;EAAE;EAC1BC,KAAK,EAAE,kBAAkB;EAAE;EAC3BC,KAAK,EAAE,kBAAkB;EAAE;EAC3BC,cAAc,EAAE,gCAAgC;EAChDC,cAAc,EAAE,gCAAgC;EAChDC,gBAAgB,EAAE,mBAAmB;EAAE;EACvCC,UAAU,EAAE,eAAe;EAAE;EAC7BC,eAAe,EAAE,sBAAsB;EAAE;EACzCC,OAAO,EAAE,SAAS;EAAE;EACpBC,aAAa,EAAE,OAAO;EAAE;EACxBC,WAAW,EAAE,QAAQ;EAAE;EACvBC,SAAS,EAAE,MAAM,CAAE;AACvB,CAAC;;AAED,OAAO,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;EAC3C,IAAIC,GAAG,GAAGzB,QAAQ,GAAG,MAAM,GAAGwB,QAAQ,GAAG,GAAG;EAC5C,OAAO;IACHE,KAAK,EAAE,MAAM3B,KAAK,CAAC4B,GAAG,CAACF,GAAG,CAAC;IAC3BG,SAAS,EAAEC,EAAE,IAAI9B,KAAK,CAAC4B,GAAG,CAACF,GAAG,GAAGI,EAAE,CAAC;IACpCC,IAAI,EAAEC,SAAS,IAAIhC,KAAK,CAAC+B,IAAI,CAACL,GAAG,EAACM,SAAS,CAAC;IAC5CC,GAAG,EAAE,CAACH,EAAE,EAAEI,aAAa,KAAKlC,KAAK,CAACiC,GAAG,CAACP,GAAG,GAAGI,EAAE,EAAEI,aAAa,CAAC;IAC9DC,MAAM,EAAEL,EAAE,IAAI9B,KAAK,CAACmC,MAAM,CAACT,GAAG,GAAGI,EAAE;EACvC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}